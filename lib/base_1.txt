(define (square x) (* x x))
(define (sum-of-squares x y)
   (+ (square x) (square y)))
(define (f a) (sum-of-squares (+ a 1) (* a 2)))
(define (abs x) (if (< x 0) (- x) x))


(define (average x y) (/ (+ x y) 2))

(define (sqrt x) 
  (define (good-enough? guess x) (< (abs (- (square guess) x)) 0.001))
  (define (improve guess x) (average guess (/ x guess)))
  (define (sqrt-iter guess x) (if (good-enough? guess x) guess (sqrt-iter (improve guess x) x)))
  (sqrt-iter 1.0 x))
 
(define (factorial n) (if (= n 1) 1 (* n (factorial (- n 1)))))
(define (factorial n) 
  (define (iter count product)
    (if (> count n)
        product
        (iter (+ count 1) (* product count))))
   (iter 1 1))